import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Legend } from 'recharts';
import axios from 'axios';
import { useAuth } from "../context/AuthContext";

const MalwareScannerDashboard = () => {
  const [userData, setUserData] = useState([]);
  const [uniqueUsers, setUniqueUsers] = useState(0);
  const [data, setData] = useState([]); // State for chart data
  const navigate = useNavigate();
  const { logout } = useAuth();
  const [faqs, setFaqs] = useState([
    { id: 1, question: 'How to run a scan?' },
    { id: 2, question: 'What to do if malware is detected?' },
    { id: 3, question: 'How to update the software?' },
  ]);

  const addFaq = () => {
    const newFaq = { id: Date.now(), question: 'New FAQ' };
    setFaqs([...faqs, newFaq]);
  };

  const deleteFaq = (id) => {
    setFaqs(faqs.filter(faq => faq.id !== id));
  };

  const handleclick = () => {
    logout();
    navigate("/");
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await axios.get("http://127.0.0.1:8000/url-detections/?format=json");

        // Set detection data
        setUserData(res.data);

        // Count unique author_ids
        const uniqueAuthorIds = new Set(res.data.map(item => item.author_id));
        setUniqueUsers(uniqueAuthorIds.size);

        // Prepare data for the chart
        const dailyData = res.data.reduce((acc, item) => {
          const date = new Date(item.date_posted);
          const dateString = date.toLocaleDateString();

          // Initialize the object for each date if it doesn't exist
          if (!acc[dateString]) {
            acc[dateString] = { name: dateString, malware: 0, defacement: 0, phishing: 0, benign: 0 };
          }

          // Increment counts based on the result field
          if (item.result === 'malware') {
            acc[dateString].malware += 1;
          } else if (item.result === 'defacement') {
            acc[dateString].defacement += 1;
          } else if (item.result === 'phishing') {
            acc[dateString].phishing += 1;
          } else if (item.result === 'benign') {
            acc[dateString].benign += 1;
          }

          return acc;
        }, {});

        // Convert dailyData object into an array for the chart
        const chartData = Object.values(dailyData);
        setData(chartData);
      } catch (error) {
        console.error("Error fetching data", error);
      }
    };
    fetchData();
  }, []);

  return (
    <div className='bg-black'>
      <header className="bg-gray-700 text-white p-4 flex justify-between items-center mb-6">
        <div className="flex items-center">
          <svg className="w-6 h-6 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z" clipRule="evenodd" />
          </svg>
          <h1 className="text-xl font-bold">XGBoost Malware Scanner</h1>
        </div>
        <nav>
          <Link to="/admin-dashboard" className="mx-2">Dashboard</Link>
          <Link to="#" className="mx-2">Settings</Link>
          <button onClick={handleclick}>Logout</button>
        </nav>
      </header>
      <div className='p-5'>
        <main>
          <section className="bg-gray-700 rounded-lg p-6 mb-6">
            <h2 className="text-xl font-bold mb-4">Malware Detection Trends</h2>
            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={data}>
                <XAxis dataKey="name" stroke="#fff" />
                <YAxis stroke="#fff" />
                <Legend />
                <Line type="monotone" dataKey="malware" stroke="#8884d8" name="Malware" />
                <Line type="monotone" dataKey="defacement" stroke="#ff7300" name="Defacement" />
                <Line type="monotone" dataKey="phishing" stroke="#82ca9d" name="Phishing" />
                <Line type="monotone" dataKey="benign" stroke="#ffc658" name="Benign URLs" />
              </LineChart>
            </ResponsiveContainer>
          </section>

          <div className="grid grid-cols-2 gap-6">
            <section className="bg-gray-700 rounded-lg p-6">
              <h2 className="text-xl font-bold mb-4">Summary Statistics</h2>
              <p>Total Scans: {userData.length}</p>
              <p>Malware Detected: {userData.filter(item => item.result === 'malware').length}</p>
              <p>Defacement Detected: {userData.filter(item => item.result === 'defacement').length}</p>
              <p>Phishing Detected: {userData.filter(item => item.result === 'phishing').length}</p>
              <p>Benign URLs: {userData.filter(item => item.result === 'benign').length}</p>
              <p>Last Scan: {userData.length > 0 ? new Date(userData[userData.length - 1].date_posted).toLocaleDateString() : 'N/A'}</p>
            </section>

            <section className="bg-gray-700 rounded-lg p-6">
              <h2 className="text-xl font-bold mb-4">FAQ Management</h2>
              {faqs.map(faq => (
                <div key={faq.id} className="bg-purple-600 rounded-lg p-3 mb-2 flex justify-between items-center">
                  <span>{faq.question}</span>
                  <div>
                    <button className="bg-white text-purple-600 px-2 py-1 rounded mr-2">Edit</button>
                    <button className="bg-white text-purple-600 px-2 py-1 rounded" onClick={() => deleteFaq(faq.id)}>Delete</button>
                  </div>
                </div>
              ))}
              <button className="w-full bg-white text-purple-600 rounded p-2 mt-2" onClick={addFaq}>
                Add New FAQ
              </button>
            </section>
          </div>
        </main>
      </div>
      <footer className="bg-gray-700 text-white p-4 text-center mb-0">
        <p>Â© 2023 XGBoost Malware Scanner. All rights reserved.</p>
      </footer>
    </div>
  );
};

export default MalwareScannerDashboard;
