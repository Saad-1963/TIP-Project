import { useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

const RegisterPage = () => {
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    username: "",
    email: "",
    password: "",
    confirmPassword: "",
  });

  const [error, setError] = useState("");
  const [successMessage, setSuccessMessage] = useState("");

  // Handle input change for all fields
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleRegister = async () => {
    const { username, email, password, confirmPassword } = formData;

    if (password !== confirmPassword) {
      setError("Passwords do not match.");
      return;
    }

    try {
      // Sending POST request to your signup API
      const response = await axios.post("http://127.0.0.1:8000/api/signup/", {
        username,
        email,
        password
      }, {
        headers: {
          "Content-Type": "application/json"
        }
      });

      // If the response is successful
      if (response.status === 200 || response.status === 201) {
        setSuccessMessage("Registration successful. Redirecting to login...");
        setTimeout(() => {
          navigate("/"); // Redirect to login page
        }, 2000);
      }
    } catch (error) {
      // Handling API errors
      if (error.response) {
        setError(error.response.data.message || "Registration failed.");
      } else {
        setError("Something went wrong. Please try again.");
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-800">
      <h1 className="text-4xl font-bold text-white mb-8">Register</h1>
      <div className="flex flex-col bg-gray-700 p-8 rounded-lg shadow-lg w-80">
        <input
          type="text"
          name="username"
          placeholder="Username"
          className="mb-4 p-2 bg-gray-600 text-white"
          value={formData.username}
          onChange={handleInputChange}
        />
        <input
          type="email"
          name="email"
          placeholder="Email"
          className="mb-4 p-2 bg-gray-600 text-white"
          value={formData.email}
          onChange={handleInputChange}
        />
        <input
          type="text"
          name="password"
          placeholder="Password"
          className="mb-4 p-2 bg-gray-600 text-white"
          value={formData.password}
          onChange={handleInputChange}
        />
        <input
          type="text"
          name="confirmPassword"
          placeholder="Confirm Password"
          className="mb-4 p-2 bg-gray-600 text-white"
          value={formData.confirmPassword}
          onChange={handleInputChange}
        />

        {error && <p className="text-red-500 mb-4">{error}</p>}
        {successMessage && <p className="text-green-500 mb-4">{successMessage}</p>}

        <button
          className="p-2 bg-purple-600 text-white rounded"
          onClick={handleRegister}
        >
          Register
        </button>
      </div>
    </div>
  );
};

export default RegisterPage;
