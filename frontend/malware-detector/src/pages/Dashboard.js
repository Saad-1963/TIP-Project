import { Bell, ChevronDown, Grid, LogOut, Search } from "lucide-react";
import { Button } from "../components/Button.js";
import { Input } from "../components/Input.js";
import { useAuth } from "../context/AuthContext";
import { useNavigate, Link } from "react-router-dom"; // Import Link

export default function Dashboard() {
  const { logout } = useAuth();
  const navigate = useNavigate();

  const handleClick = () => {
    logout();
    navigate("/");
  };

  return (
    <div className="flex h-screen bg-gray-900 text-gray-100">
      {/* Sidebar */}
      <aside className="w-64 bg-gray-800 p-4">
        <div className="flex items-center mb-8">
          <span className="text-2xl font-bold">MalwareGuard</span>
        </div>
        <nav className="space-y-2">
          {[
            { label: "Input Data", path: "/input-data" },
            { label: "Results", path: "/results" },
            { label: "FAQs", path: "/faq" },
            { label: "User Profile", path: "#" },
            { label: "Scan Status", path: "/scan-status" },
          ].map((item) => (
            <Link key={item.label} to={item.path} className="flex items-center p-2 hover:bg-gray-700 rounded">
              <Grid className="mr-2 h-4 w-4" />
              {item.label}
            </Link>
          ))}
        </nav>
        <div className="absolute bottom-4">
          <Button onClick={handleClick} variant="ghost" className="flex items-center text-gray-400">
            <LogOut className="mr-2 h-4 w-4" /> Sign Out
          </Button>
        </div>
      </aside>

      {/* Main content */}
      <div className="flex-1 flex flex-col overflow-hidden">
        {/* Top bar */}
        <header className="flex items-center justify-between p-4 bg-gray-800">
          <div className="flex items-center">
            <Grid className="mr-2 h-6 w-6" />
            <h1 className="text-xl font-semibold">User Dashboard</h1>
          </div>
          <div className="flex items-center space-x-4">
            <div className="relative">
              <Search className="absolute left-2 top-2.5 h-4 w-4 text-gray-500" />
              <Input
                type="search"
                placeholder="Enter IP, domain, or file extension"
                className="pl-8 bg-gray-700 border-gray-600 focus:border-purple-500 focus:ring-purple-500"
              />
            </div>
            <Button variant="ghost" size="icon">
              <Bell className="h-5 w-5" />
            </Button>
            <Button variant="ghost" size="icon">
              <ChevronDown className="h-5 w-5" />
            </Button>
          </div>
        </header>

        {/* Dashboard content */}
        <main className="flex-1 overflow-y-auto p-4">
          <h2 className="text-2xl font-semibold mb-4">Malware Scan Results</h2>

          {/* Scan result cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            {["IPs, Domains, Files", "Documents"].map((title) => (
              <div key={title} className="bg-gray-800 p-4 rounded-lg">
                <div className="flex items-center mb-2">
                  <div className="bg-purple-600 p-2 rounded-full mr-2">
                    <Search className="h-6 w-6" />
                  </div>
                  <div>
                    <h3 className="font-semibold">{title}</h3>
                    <p className="text-sm text-gray-400">Scan Results: 361 threats</p>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Recent scans table */}
          <h3 className="text-xl font-semibold mb-4">Recent Scans</h3>
          <div className="bg-gray-800 rounded-lg overflow-hidden">
            <table className="w-full">
              <thead className="bg-gray-700">
                <tr>
                  <th className="p-2 text-left">Scan Type</th>
                  <th className="p-2 text-left">Results</th>
                  <th className="p-2 text-left">FAQs</th>
                  <th className="p-2 text-left">Malware detected</th>
                </tr>
              </thead>
              <tbody>
                {[
                  { type: "IP, Domain, Extensions", result: "Results", faq: "FAQs", date: "Last scan: 24/08/2023" },
                  { type: "XGBoost Analysis", result: "Static Analysis", faq: "Summary stats", date: "Last scan: 24/08/2023" },
                  { type: "Malware detections graph", result: "Admin tools", faq: "User settings", date: "Last scan: 24/08/2023" },
                  { type: "Scanned files summary", result: "Admin FAQs", faq: "Admin settings", date: "Last login: 21/08/2023" },
                  { type: "FAQ Management Tool", result: "FAQs", faq: "User settings", date: "Last login: 21/08/2023" },
                ].map((scan, index) => (
                  <tr key={index} className="border-t border-gray-700">
                    <td className="p-2">
                      <div className="flex items-center">
                        <div className="bg-purple-600 p-1 rounded mr-2">
                          <Grid className="h-4 w-4" />
                        </div>
                        {scan.type}
                      </div>
                    </td>
                    <td className="p-2">{scan.result}</td>
                    <td className="p-2">{scan.faq}</td>
                    <td className="p-2">{scan.date}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </main>
      </div>
    </div>
  );
}
