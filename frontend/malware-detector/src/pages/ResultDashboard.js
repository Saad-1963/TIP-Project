import React, { useEffect, useState } from 'react'
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts'
import { Search, BarChart2, FileText, HelpCircle, Users, Clock, Settings, LogOut,Bell,ChevronDown } from 'lucide-react';
import { Link } from 'react-router-dom';
import axios from 'axios';


const Sidebar = () => {
 
  const navItems = [
    { icon: <Search className="w-5 h-5" />, label: "MalwareGu" },
    { icon: <BarChart2 className="w-5 h-5" />, label: "Input Data", path: "/input-data" },
    { icon: <FileText className="w-5 h-5" />, label: "Results", path: "/results" },
    { icon: <HelpCircle className="w-5 h-5" />, label: "FAQs", path: "/faqs" },
    { icon: <Users className="w-5 h-5" />, label: "User Profile", path: "#" },
    { icon: <Clock className="w-5 h-5" />, label: "Scan Status", path: "/scan-status" },
  ];





 


  return (
    <aside className="w-64 bg-gray-800 h-screen fixed left-0 top-0 flex flex-col justify-between">
      <div className="p-4">
        <nav>
          <ul className="space-y-2">
            {navItems.map((item) => (
              <li key={item.label}>
                <Link
                  to={item.path}
                  className="text-gray-300 hover:text-white flex items-center p-2 rounded-lg hover:bg-gray-700"
                >
                  {item.icon}
                  <span className="ml-3">{item.label}</span>
                </Link>
              </li>
            ))}
          </ul>
        </nav>
      </div>
      <div className="p-4">
        <div className="flex items-center space-x-2 mb-4">
          <img src="/api/placeholder/32/32" alt="User" className="w-8 h-8 rounded-full" />
          <div>
            <p className="text-sm font-medium text-white">John Smith</p>
            <p className="text-xs text-gray-400">johnsmith@email.abc</p>
          </div>
        </div>
        <button className="text-gray-300 hover:text-white flex items-center">
          <LogOut className="w-5 h-5 mr-2" />
          <span>Sign Out</span>
        </button>
      </div>
    </aside>
  );
};


const Card = ({ title, value, buttonText, highlight }) => (
  <div className={`bg-gray-800 p-4 rounded-lg ${highlight ? 'border border-blue-500' : ''}`}>
    <h3 className="text-sm text-gray-400 mb-2">{title}</h3>
    <div className="flex items-center justify-between">
      <span className="text-2xl font-bold">{value}</span>
      <div className="w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center">
        <svg className="w-4 h-4 text-white" fill="none" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" viewBox="0 0 24 24" stroke="currentColor">
          <path d="M12 4v16m8-8H4"></path>
        </svg>
      </div>
    </div>
    <button className="mt-4 w-full bg-purple-600 text-white py-2 rounded-md text-sm">{buttonText}</button>
  </div>
)

const FAQCategory = ({ icon, label }) => (
  <div className="flex flex-col items-center">
    <div className="w-12 h-12 bg-purple-600 rounded-full flex items-center justify-center mb-2">
      {icon}
    </div>
    <span className="text-xs text-gray-400">{label}</span>
  </div>
)

// const data = [
//   { name: 'Mon', value: 20 },
//   { name: 'Tue', value: 30 },
//   { name: 'Wed', value: 25 },
//   { name: 'Thu', value: 40 },
//   { name: 'Fri', value: 35 },
//   { name: 'Sat', value: 15 },
//   { name: 'Sun', value: 10 },
// ]

export default function ResultDashboard() {
  const [userData, setUserData] = useState([]);
  const [uniqueUsers, setUniqueUsers] = useState(0);
  const [data, setData] = useState([]); // State for chart data

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await axios.get("http://127.0.0.1:8000/url-detections/?format=json");

        // Set detection data
        setUserData(res.data);

        // Count unique author_ids
        const uniqueAuthorIds = new Set(res.data.map(item => item.author_id));
        setUniqueUsers(uniqueAuthorIds.size);

        // Prepare data for the chart
        const detectionCounts = res.data.reduce((acc, item) => {
          const date = new Date(item.date_posted); // Adjust this based on your data structure
          const dayName = date.toLocaleString('en-US', { weekday: 'short' }); // Get short day name
          if (!acc[dayName]) {
            acc[dayName] = 0; // Initialize the count for the day if it doesn't exist
          }
          acc[dayName] += 1; // Increment the count
          return acc;
        }, {});

        // Convert detectionCounts object into an array for the chart
        const chartData = Object.keys(detectionCounts).map(day => ({
          name: day,
          value: detectionCounts[day],
        }));

        setData(chartData);
      } catch (error) {
        console.error("Error fetching data", error);
      }
    };
    fetchData();
  }, []);

  return (
    <div className="flex bg-gray-900 text-white min-h-screen">
      <Sidebar />
      <div className="ml-64 flex-1 p-8">
        <header className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">Scan Results</h1>
          <div className="flex items-center space-x-4">
            <div className="relative">
              <Search className="absolute left-2 top-2.5 h-4 w-4 text-gray-500" />
              <input
                type="search"
                placeholder="Search..."
                className="pl-8 pr-4 py-2 bg-gray-800 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600"
              />
            </div>
            <button className="p-2 rounded-full bg-gray-800 hover:bg-gray-700">
              <Bell className="h-5 w-5" />
            </button>
            <button className="p-2 rounded-full bg-gray-800 hover:bg-gray-700">
              <ChevronDown className="h-5 w-5" />
            </button>
          </div>
        </header>

        {/* Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
          <Link to="/input-data">
          <Card title="Total detections" value={userData.length} buttonText="Scan again" highlight={true} />
          </Link>
          <Card title="Number of Users" value={uniqueUsers} buttonText="Manage FAQs" />
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-sm text-gray-400 mb-2">Detection history</h3>
            <div className="flex items-center justify-between">
              <span className="text-sm">Last 24</span>
              <button className="bg-purple-600 text-white px-3 py-1 rounded-md text-xs">View more</button>
            </div>
          </div>
        </div>

        {/* Detection trends */}
        <div className="bg-gray-800 p-4 rounded-lg mb-6">
          <div className="flex space-x-4 mb-4">
            <button className="text-sm text-gray-400 hover:text-white">Weekly</button>
           
          </div>
          <ResponsiveContainer width="100%" height={200}>
            <BarChart data={data}>
              <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
              <XAxis dataKey="name" stroke="#9CA3AF" />
              <YAxis stroke="#9CA3AF" />
              <Bar dataKey="value" fill="#8B5CF6" />
            </BarChart>
          </ResponsiveContainer>
        </div>

        {/* FAQ Categories */}
        <div className="bg-gray-800 p-4 rounded-lg">
          <h3 className="text-sm text-gray-400 mb-4">FAQ Categories</h3>
          <div className="flex justify-between">
            <FAQCategory icon="📊" label="Detection" />
            <FAQCategory icon="📈" label="Analysis" />
            <FAQCategory icon="🛠️" label="Admin tools" />
            <FAQCategory icon="👥" label="User" />
          </div>
        </div>
      </div>
    </div>
  );
}